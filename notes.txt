// Search books by title or author
bookRouter.get("/search", verifyToken, async (req, res) => {
  try {
    const { q } = req.query; // q = search query
    
    if (!q) {
      return res.status(400).json({ message: "Search query is required" });
    }
    
    const books = await Book.find({
      $or: [
        { title: { $regex: q, $options: 'i' } },
        { author: { $regex: q, $options: 'i' } }
      ]
    }).populate("listedBy", "firstName lastName email");
    
    return res.status(200).json({ 
      message: "Search results", 
      data: books 
    });
  } catch (error) {
    console.log(error);
    return res.status(500).json({ message: "Internal Server Error" });
  }
});